{"version":3,"sources":["webpack:///./src/pages/custom.js","webpack:///./src/api/exercises-list.js"],"names":["CustomPage","props","exercises","selectExercise","exercise","index","state","selectedExercises","indexOf","push","setState","splice","selectLevel","level","saveCustomData","window","frequency","work","length","localStorage","setItem","JSON","stringify","startExercise","location","customData","parse","getItem","componentDidMount","render","className","htmlFor","map","key","id","onClick","type","value","this","Component","ExercisesList"],"mappings":"yJAWMA,E,oBAuBJ,WAAYC,GAAQ,IAAD,GACjB,cAAMA,IAAN,MAvBFC,UAAY,CACV,gBACA,SACA,SACA,SACA,UACA,gBACA,iBACA,mBACA,cACA,cACA,SACA,oBACA,aACA,kBACA,cACA,gBACA,cACA,cACA,WAGiB,EAiCnBC,eAAiB,SAACC,EAAUC,GAC1B,IAAwD,IAApD,EAAKC,MAAMC,kBAAkBC,QAAQJ,GAAkB,CACzD,IAAIF,EAAY,EAAKI,MAAMC,kBAC3BL,EAAUO,KAAKL,GACf,EAAKM,SAAS,CACZH,kBAAmBL,QAOhB,CACL,IAAIA,EAAY,EAAKI,MAAMC,kBAE3BL,EAAUS,OAAO,EAAKL,MAAMC,kBAAkBC,QAAQJ,GAAW,GACjE,EAAKM,SAAS,CACZH,kBAAmBL,MAlDN,EA2DnBU,YAAc,SAAAC,GACZ,EAAKH,SAAS,CACZG,MAAOA,KA7DQ,EA8EnBC,eAAiB,WACf,GAAsB,oBAAXC,OAAwB,CAAC,IAAD,EACE,EAAKT,MAAhCU,EADyB,EACzBA,UAAWC,EADc,EACdA,KAAMJ,EADQ,EACRA,MAEvB,EAAKP,MAAMC,kBAAkBW,OAAS,GACtCF,GACAC,GACAJ,IAEAM,aAAaC,QACX,aACAC,KAAKC,UAAU,CACbN,YACAC,OACAJ,QACAN,kBAAmB,EAAKD,MAAMC,kBAC9BgB,cAAe,KAGnBR,OAAOS,SAAW,2BA/FtB,IAAMC,EACc,oBAAXV,OACHM,KAAKK,MAAMP,aAAaQ,QAAQ,eAChC,GALW,OAOjB,EAAKrB,MAAQ,CACXU,UAAWS,GAAcA,EAAWT,UAAYS,EAAWT,UAAY,EACvEC,KAAMQ,GAAcA,EAAWR,KAAOQ,EAAWR,KAAO,EACxDJ,MAAOY,GAAcA,EAAWZ,MAAQY,EAAWZ,MAAQ,GAC3DN,kBACEkB,GAAcA,EAAWlB,kBACrBkB,EAAWlB,kBACX,IAdS,E,kHAiBnBqB,kBAAA,WAME,GAAsB,oBAAXb,OACUM,KAAKK,MAAMP,aAAaQ,QAAQ,gB,EA8EvDE,OAAA,WAAU,IAAD,OACP,OACE,oCACE,kBAAC,IAAD,MACA,yBAAKC,UAAU,YACb,yBAAKA,UAAU,aACb,2BAAOC,QAAQ,IAAf,sBACA,wBAAID,UAAU,WACX5B,IAAU8B,IAAI,SAAC5B,EAAUC,GACxB,OACE,wBACE4B,IAAK5B,EACL6B,GAAE,GAAK7B,EAAQD,EACf0B,UAAU,SACVK,QAAS,kBAAM,EAAKhC,eAAeC,EAAUC,KAE5CD,OA4BX,yBAAK0B,UAAU,aACb,2BAAOC,QAAQ,IAAf,sBACA,yBAAKD,UAAU,SACb,yBAAKA,UAAU,YACb,2BACEM,KAAK,WACLF,GAAG,OACHG,MAAM,OACNF,QAAS,kBAAM,EAAKvB,YAAY,WAElC,2BAAOmB,QAAQ,QAAf,SAEF,yBAAKD,UAAU,uBACb,2BACEM,KAAK,WACLF,GAAG,SACHG,MAAM,SACNF,QAAS,kBAAM,EAAKvB,YAAY,aAElC,2BAAOmB,QAAQ,UAAf,WAEF,yBAAKD,UAAU,YACb,2BACEM,KAAK,WACLF,GAAG,OACHG,MAAM,OACNF,QAAS,kBAAM,EAAKvB,YAAY,WAElC,2BAAOmB,QAAQ,OAAOD,UAAU,cAAhC,WAMN,yBAAKA,UAAU,eACb,yBACEA,UAAU,gCACVK,QAASG,KAAKxB,gBAFhB,4B,GA5MayB,aAyNVvC,a,iCC1MAwC,IA1BO,CACpB,mBACA,UACA,aACA,cACA,WACA,gBACA,gBACA,aACA,UACA,cACA,cACA,SACA,mBACA,SACA,UACA,UACA,cACA,SACA,iBACA,SACA,iBACA,kBACA","file":"component---src-pages-custom-js-4ba4f8d7975dd5f6fcb1.js","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from '../components/navbar';\n// import InputRange from 'react-input-range';\nimport exercises from '../api/exercises-list';\nimport 'react-input-range/lib/css/index.css';\nimport './index.css';\n\n// if (typeof window !== 'undefined') {\n//   const InputRange = require('react-input-range');\n// }\n\nclass CustomPage extends Component {\n  exercises = [\n    'Jumping Jacks',\n    'Lunges',\n    'Planks',\n    'Squats',\n    'Burpees',\n    'Glute Bridges',\n    'Spinal Balance',\n    'Bicycle Crunches',\n    'Side Lunges',\n    'Jump Squats',\n    'Situps',\n    'Mountain Climbers',\n    'Butt Kicks',\n    'Superman Raises',\n    'Tricep Dips',\n    'Flutter Kicks',\n    'Calf Raises',\n    'Jump Lunges',\n    'Pullups'\n  ];\n\n  constructor(props) {\n    super(props);\n    const customData =\n      typeof window !== 'undefined'\n        ? JSON.parse(localStorage.getItem('customData'))\n        : {};\n\n    this.state = {\n      frequency: customData && customData.frequency ? customData.frequency : 2,\n      work: customData && customData.work ? customData.work : 3,\n      level: customData && customData.level ? customData.level : '',\n      selectedExercises:\n        customData && customData.selectedExercises\n          ? customData.selectedExercises\n          : []\n    };\n  }\n  componentDidMount() {\n    // console.log(\"fsdfsdfdsfds\",this.state.selectedExercises);\n    // this.state.selectedExercises((selectEx) => {\n    //   const index = this.exercises.findIndex((exercise) => exercise === selectEx);\n    //   document.getElementById(`${index}${exercise}`).className = \"choice selected-exercise\";\n    // });\n    if (typeof window !== 'undefined') {\n      const customData = JSON.parse(localStorage.getItem('customData'));\n      if (customData) {\n        if (typeof window !== 'undefined') {\n          // document.getElementById(customData.level).checked = true;\n        }\n      }\n    }\n  }\n\n  selectExercise = (exercise, index) => {\n    if (this.state.selectedExercises.indexOf(exercise) === -1) {\n      let exercises = this.state.selectedExercises;\n      exercises.push(exercise);\n      this.setState({\n        selectedExercises: exercises\n      });\n\n      if (typeof window !== 'undefined') {\n        // document.getElementById(`${index}${exercise}`).className =\n        //   'choice selected-exercise';\n      }\n    } else {\n      let exercises = this.state.selectedExercises;\n      // exercises.push(exercise);\n      exercises.splice(this.state.selectedExercises.indexOf(exercise), 1);\n      this.setState({\n        selectedExercises: exercises\n      });\n\n      if (typeof window !== 'undefined') {\n        // document.getElementById(`${index}${exercise}`).className = 'choice';\n      }\n    }\n  };\n\n  selectLevel = level => {\n    this.setState({\n      level: level\n    });\n\n    // if (typeof window !== 'undefined') {\n    //   if (level === 'easy') {\n    //     document.getElementById('medium').checked = false;\n    //     document.getElementById('hard').checked = false;\n    //   } else if (level === 'medium') {\n    //     document.getElementById('easy').checked = false;\n    //     document.getElementById('hard').checked = false;\n    //   } else {\n    //     document.getElementById('easy').checked = false;\n    //     document.getElementById('medium').checked = false;\n    //   }\n    // }\n  };\n\n  saveCustomData = () => {\n    if (typeof window !== 'undefined') {\n      const { frequency, work, level } = this.state;\n      if (\n        this.state.selectedExercises.length > 0 &&\n        frequency &&\n        work &&\n        level\n      ) {\n        localStorage.setItem(\n          'customData',\n          JSON.stringify({\n            frequency,\n            work,\n            level,\n            selectedExercises: this.state.selectedExercises,\n            startExercise: 1\n          })\n        );\n        window.location = '/home?customData=true';\n      }\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <NavBar />\n        <div className=\"big-form\">\n          <div className=\"f-section\">\n            <label htmlFor=\"\">Select Exercises: </label>\n            <ul className=\"choices\">\n              {exercises.map((exercise, index) => {\n                return (\n                  <li\n                    key={index}\n                    id={`${index}${exercise}`}\n                    className=\"choice\"\n                    onClick={() => this.selectExercise(exercise, index)}\n                  >\n                    {exercise}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          {/* {typeof window !== 'undefined' && (\n            <div>\n              <div className=\"f-section\">\n                <label htmlFor=\"\">Frequency: </label>\n                <InputRange\n                  maxValue={this.state.work}\n                  minValue={0}\n                  value={this.state.frequency}\n                  onChange={value => this.setState({ frequency: value })}\n                />\n              </div>\n              <div className=\"f-section\">\n                <label htmlFor=\"\">How long you gonna work:</label>\n                <InputRange\n                  maxValue={12}\n                  minValue={2}\n                  value={this.state.work}\n                  onChange={value => this.setState({ work: value })}\n                />\n              </div>\n            </div>\n          )} */}\n          <div className=\"f-section\">\n            <label htmlFor=\"\">Level of exercise:</label>\n            <div className=\"level\">\n              <div className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id=\"easy\"\n                  value=\"easy\"\n                  onClick={() => this.selectLevel('easy')}\n                />\n                <label htmlFor=\"easy\">Easy</label>\n              </div>\n              <div className=\"checkbox checkbox-2\">\n                <input\n                  type=\"checkbox\"\n                  id=\"medium\"\n                  value=\"medium\"\n                  onClick={() => this.selectLevel('medium')}\n                />\n                <label htmlFor=\"medium\">Medium</label>\n              </div>\n              <div className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id=\"hard\"\n                  value=\"hard\"\n                  onClick={() => this.selectLevel('hard')}\n                />\n                <label htmlFor=\"hard\" className=\"hard-label\">\n                  Hard\n                </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"save-custom\">\n            <div\n              className=\"start-exercise custom-session\"\n              onClick={this.saveCustomData}\n            >\n              Start Custom Session\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CustomPage;\n","const ExercisesList = [\n  'Bicycle Crunches',\n  'Burpees',\n  'Butt Kicks',\n  'Calf Raises',\n  'Crunches',\n  'Flutter Kicks',\n  'Glute Bridges',\n  'High Knees',\n  'Jumping',\n  'Jump Lunges',\n  'Jump Squats',\n  'Lunges',\n  'Mountain Climber',\n  'Planks',\n  'Pullups',\n  'Pushups',\n  'Side Lunges',\n  'Situps',\n  'Spinal Balance',\n  'Squats',\n  'Stair Stepping',\n  'Superman Raises',\n  'Tricep Dips'\n];\n\nexport default ExercisesList;\n"],"sourceRoot":""}